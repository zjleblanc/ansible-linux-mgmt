---
- name: Pre-process patch targets and dispatch jobs
  hosts: "{{ patch_targets.keys() | default(omit) }}"
  become: true

  tasks:
    - name: Identify DNF changes
      check_mode: true
      ansible.builtin.dnf:
        name: '*'
        state: latest
        update_cache: true

    - name: Check service status
      ansible.builtin.service_facts:

- name: Dispatch schedules for downstream workflow
  hosts: "{{ patch_targets.keys() | default(omit) }}"
  become: false
  gather_facts: false

  vars:
    ansible_connection: local
    # for testing, override with survey
    change_request: CHG01234 # source from ingress (itsm)
    change_window_timezone: "{{ patch_targets[inventory_hostname]['change_window_timezone'] }}" # America/Chicago
    change_window_datetime: "{{ patch_targets[inventory_hostname]['change_window_datetime'] }}" # "2025-04-11 11:10:00"

  tasks:
    - name: Get current datetime
      ansible.builtin.set_fact:
        current_datetime: "{{ lookup('pipe', 'TZ=\"' + change_window_timezone + '\" date \"+%Y-%m-%d %H:%M:%S\"') }}"

    - name: Assert valid date time for change window
      ansible.builtin.assert:
        that: (change_window_datetime|to_datetime - current_datetime|to_datetime).total_seconds() > 0
        fail_msg: Please ensure that provided date time is in the future

    - name: Prep host metadata
      ansible.builtin.set_fact:
        dispatch_host_metadata:
          _hosts: "{{ inventory_hostname }}"
          version: "{{ ansible_distribution_version }}"
          kernel: "{{ ansible_kernel }}"
          arch: "{{ ansible_architecture  }}"
          change_request: "{{ change_request }}"

    - name: Path determination # simple example
      ansible.builtin.set_fact:
        dispatch_workflow: "rhel{{ ansible_distribution_version.replace('.', '_') }}"

    - name: Create schedule
      ansible.controller.schedule:
        name: "Dispatcher Schedule => {{ dispatch_workflow }} @ {{ change_window_datetime }} {{ change_window_timezone }}"
        unified_job_template: "Linux // Patching // {{ dispatch_workflow }}"
        rrule: "{{ query('awx.awx.schedule_rrule', 'none', start_date=change_window_datetime, timezone=change_window_timezone) }}"
        extra_data: "{{ dispatch_host_metadata }}"
