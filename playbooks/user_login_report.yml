- name: Login random sample of users
  hosts: "{{ _hosts | default(omit)  }}"
  gather_facts: false
  become: true

  # vars:
  #   last_records_max: # passed to last command
  #   report_title: Last Login Report
  #   report_desc: Combining last command output with home directory data
  #   report_server: # must be a host in your inventory
  #   report_dest: /var/www/html/report.html # landing spot on report_server for generated html

  tasks:
    - name: Wait for SSH
      ansible.builtin.wait_for_connection:
        timeout: 60

    - name: Run last
      register: r_last
      ansible.builtin.command: last -Fw -{{ last_records_max | default(100) }}

    - name: Get last data
      ansible.builtin.set_fact:
        last_data: "{{ r_last.stdout | community.general.jc('last') }}"

    - name: Get homedir data
      loop: "{{ last_data | map(attribute='user') | unique }}"
      loop_control:
        loop_var: user
      register: r_homedirs
      when: user != 'reboot'
      ansible.builtin.command: "du --max-depth=1 -h /home/{{ user }}"

    - name: Parse homedir data
      ansible.builtin.set_fact:
        homedirs: "{{ r_homedirs.results | json_query('[].{user: user, size: stdout_lines[-1]}') | items2dict(key_name='user', value_name='size') }}"

    - name: Set report data fact
      ansible.builtin.set_fact:
        last_report_data: "{{ last_data | last_reportify(homedirs=homedirs) }}"

    - name: Generate report
      run_once: true
      ansible.builtin.include_role:
        name: zjleblanc.reporting.table_per_host
      vars:
        table_title: "{{ report_title }}"
        table_desc: "{{ report_desc }}"
        table_data_fact: last_report_data
        table_output_remote_host: "{{ report_server }}"
        table_output_dest: "{{ report_dest }}"